name: "CodeQL Security Analysis"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Runs at 6:24 AM UTC every Tuesday
    - cron: '24 6 * * 2'

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      # Required for all workflows
      actions: read
      # Required to fetch code
      contents: read
      # Required to upload SARIF results
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]
        # CodeQL supports: 'cpp', 'csharp', 'go', 'java', 'javascript-typescript', 'python', 'ruby', 'swift'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch entire history for better analysis
        fetch-depth: 0

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Specify queries to use for security analysis
        queries: security-extended,security-and-quality
        # Enable debug logging for troubleshooting
        debug: false
        # Use the latest query packs
        config: |
          query-filters:
            - exclude:
                id: js/redundant-assignment
                id: js/useless-assignment-to-local
            - include:
                tags: security
                severity: error
          paths:
            - '**/*.js'
            - '**/*.jsx'
            - '**/*.ts'
            - '**/*.tsx'
            - '**/*.mjs'
            - '**/*.cjs'
          paths-ignore:
            - 'node_modules/**'
            - 'dist/**'
            - 'build/**'
            - '.github/**'
            - '**/*.test.js'
            - '**/*.spec.js'
            - '**/*.test.ts'
            - '**/*.spec.ts'

    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then remove it and run the build manually
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
      env:
        # Provide Node.js version hint for better analysis
        NODE_VERSION: '18'

    # Alternative manual build steps (uncomment if autobuild fails)
    # - name: Setup Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18'
    #     cache: 'npm'
    #
    # - name: Install dependencies
    #   run: |
    #     npm ci --legacy-peer-deps
    #
    # - name: Build project
    #   run: |
    #     npm run build --if-present

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        # Upload results to GitHub Security tab
        upload: true
        # Add sarif output for additional processing
        output: codeql-results
        # Enable additional security checks
        add-snippet: true

    - name: Upload SARIF results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: codeql-results-${{ matrix.language }}
        path: codeql-results/
        retention-days: 5

    # Optional: Post analysis summary as PR comment
    - name: Post Analysis Summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if SARIF results exist
          const resultsDir = 'codeql-results';
          if (!fs.existsSync(resultsDir)) {
            console.log('No CodeQL results to process');
            return;
          }
          
          // Create a summary comment
          const comment = `## CodeQL Security Analysis Complete
          
          The automated security analysis has been completed for JavaScript/TypeScript code.
          
          View detailed results in the [Security tab](https://github.com/${{ github.repository }}/security/code-scanning).
          
          *Analysis performed on commit: ${{ github.sha }}*`;
          
          // Post comment only if there are findings
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not post comment:', error.message);
          }
      continue-on-error: true

    # Optional: Fail the workflow if high-severity issues are found
    - name: Check for High Severity Issues
      if: github.event_name == 'pull_request'
      run: |
        echo "Checking for high-severity security issues..."
        # This step will be handled by GitHub's security policies
        # You can configure this in your repository settings